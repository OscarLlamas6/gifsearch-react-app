{"version":3,"sources":["components/AddCategorie.js","helpers/getGifs.js","components/GifCard.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategorie","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","v","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifCard","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAe,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,QAAU,IAC5BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,GAAe,SAACO,GAAD,MAAO,QAM1B,SACA,uBACIC,KAAK,OACLC,MAAQV,EACRW,SAnBkB,SAACR,GACvBF,GAAe,SAACO,GAAD,OAAOL,EAAES,OAAOF,e,+BCR1BG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,8DAGII,MAAOF,GAHX,cAGbG,EAHa,gBAIIA,EAASC,OAJb,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAU,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAE7B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCFCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECJwB,SAAEA,GAE1B,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAW,WAEPxB,EAASC,GAAWwB,MAAM,SAAAC,GAEtBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKlB,CAACpB,IAGGqB,EDjB2BK,CAAc1B,GAAlCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACI,qCACA,qBAAIJ,UAAU,wCAAd,cAAyDhB,EAAzD,OACEoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GACT,OAAO,cAAC,EAAD,eAA2BA,GAAbA,EAAIC,aE0B7BgB,EApCM,WAIjB,MAAoC1C,mBAAS,CAAC,oBAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAQA,OACG,qCACC,8CACA,cAAC,EAAD,CAAcA,cAAgBA,IAC9B,uBAIA,6BAEQS,EAAWgB,KAAK,SAAAT,GAEZ,OAAO,cAAC,EAAD,CAEPA,SAAWA,GADNA,Y,MC1BzB4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.fe5e014b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes  from 'prop-types';\r\n\r\nexport const AddCategorie = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( (v) => e.target.value )\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length >= 1 ){\r\n            setCategories( categories => [inputValue, ...categories] );\r\n            setInputValue( (v) => \"\" )\r\n        }\r\n    \r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n        <input \r\n            type=\"text\"\r\n            value={ inputValue }\r\n            onChange= { handleInputChange }\r\n        />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategorie.propTypes = {\r\n    setCategories : PropTypes.func.isRequired,\r\n}\r\n","export const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=6&api_key=IvfnzWEkW1KDm3ZWdLNQcQ8SdU5efnlm`;\r\n    const response = await fetch( url ); \r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifCard = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifCard } from './GifCard';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__rubberBand\"> { category } </h3>\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n        <div className=\"card-grid\">           \r\n            {\r\n                images.map( img => {\r\n                   return <GifCard key={img.id} { ...img } />\r\n                } )\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () =>{\r\n       \r\n        getGifs( category ).then( imgs => {\r\n\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n       \r\n        })\r\n\r\n    }, [category]); // [] significa que solo se ejecutara una sola vez\r\n\r\n\r\n    return state; // { data:[], loasing: true }\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategorie } from './components/AddCategorie';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n//functional component\r\nconst GifExpertApp = () => {\r\n\r\n    // const [categories, setCategories] = useState([\"CSGO\", \"Aliens\", \"Game Of Thrones\", \"Crypto NFT\"]);\r\n\r\n    const [categories, setCategories] = useState([\"Game Of Thrones\"]);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories( categories => [...categories, 'Breaking Bad'] );\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n       <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategorie setCategories={ setCategories } />\r\n        <hr/>\r\n\r\n        {/* <button onClick={ handleAdd }> Agregar </button> */}\r\n        \r\n        <ol>\r\n            {\r\n                categories.map( category => {\r\n                    // return <li key={category}> {category} </li>\r\n                    return <GifGrid\r\n                    key={category} \r\n                    category={ category }\r\n                    />\r\n                } )\r\n            }\r\n        </ol>\r\n       </>\r\n    );\r\n}\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}